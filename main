import telebot
import sqlite3
from telebot import types
from datetime import datetime
import random

bot = telebot.TeleBot('6717203066:AAFTeOlXXp22qUyOcCm7AznOuMu5ruMEjl0')

morning = ['–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?', "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ß—Ç–æ –ø–æ–∂–µ–ª–∞–µ—Ç–µ?",
           '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –í–∞–º –ø–æ–ª–µ–∑–µ–Ω?']
afterning = ['–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?', "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ß—Ç–æ –ø–æ–∂–µ–ª–∞–µ—Ç–µ?",
             '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –í–∞–º –ø–æ–ª–µ–∑–µ–Ω?']
evening = ['–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?', "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –ß—Ç–æ –ø–æ–∂–µ–ª–∞–µ—Ç–µ?",
           '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! –ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –í–∞–º –ø–æ–ª–µ–∑–µ–Ω?']
night = ['–î–æ–±—Ä–æ–π –Ω–æ—á–∏! –ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?', "–î–æ–±—Ä–æ–π –Ω–æ—á–∏! –ß—Ç–æ –ø–æ–∂–µ–ª–∞–µ—Ç–µ?",
         '–î–æ–±—Ä–æ–π –Ω–æ—á–∏! –ß–µ–º —è –º–æ–≥—É –±—ã—Ç—å –í–∞–º –ø–æ–ª–µ–∑–µ–Ω?']

sp = []
bro = []
users = {}

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()

    # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ –Ω–µ–µ –¥–≤–µ –∫–Ω–æ–ø–∫–∏
    button1 = types.InlineKeyboardButton(text="üå≠ –ó–∞–∫–∞–∑–∞—Ç—å –µ–¥—É", url="https://google.com")
    button2 = types.InlineKeyboardButton(text="üçΩ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫", callback_data="broni")
    button3 = types.InlineKeyboardButton(text="5Ô∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", url="https://google.com")
    button4 = types.InlineKeyboardButton(text="üöïÔ∏è –ì–¥–µ –Ω–∞—Å –Ω–∞–π—Ç–∏?", callback_data="button4")
    button5 = types.InlineKeyboardButton(text="‚ùìÔ∏è –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="question")
    markup.add(button1)
    markup.add(button2)
    markup.add(button3)
    markup.row(button4, button5)
    current_time = datetime.now()
    if current_time.hour in [5, 6, 7, 8, 9, 10, 11]:
        bot.send_message(message.chat.id, random.choice(morning), reply_markup=markup)
    elif current_time.hour in [12, 13, 14, 15, 16]:
        bot.send_message(message.chat.id, random.choice(afterning), reply_markup=markup)
    elif current_time.hour in [17, 18, 19, 20, 21]:
        bot.send_message(message.chat.id, random.choice(evening), reply_markup=markup)
    else:
        bot.send_message(message.chat.id, random.choice(night), reply_markup=markup)


@bot.message_handler(commands=['menu'])
def menu(message, page=1, previous_message=None):
    connect = sqlite3.connect("menu")
    cursor = connect.cursor()

    pages_count_query = cursor.execute(f"SELECT COUNT(*) FROM dishes").fetchall()
    pages_count = str(pages_count_query[0])

    product_query = cursor.execute(f"SELECT title, description, photo, price FROM dishes WHERE page = ?;",
                                   (page,))
    title, description, photo, price = product_query.fetchone()


    buttons = types.InlineKeyboardMarkup()
    if page != 1:
        left = page - 1
    else:
        left = 7
    if page != 7:
        right = page + 1
    else:
        right = 1

    left_button = types.InlineKeyboardButton("‚Üê", callback_data=f'to {left}')
    page_button = types.InlineKeyboardButton(f"{str(page)}/{str(pages_count)[1:2]}", callback_data='_')
    right_button = types.InlineKeyboardButton("‚Üí", callback_data=f'to {right}')
    buy_button = types.InlineKeyboardButton("–ö–£–ü–ò–¢–¨", callback_data='buy')
    buttons.add(left_button, page_button, right_button)
    buttons.add(buy_button)

    try:
        try:
            pho = open(photo, 'rb')
        except:
            pho = photo
        msg = f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–û–ø–∏—Å–∞–Ω–∏–µ: "
        msg += f"{description}\n"
        msg += f"–¶–µ–Ω–∞: {price} —Ä—É–±–ª–µ–π\n"

        bot.send_photo(message.chat.id, photo=pho, caption=msg, reply_markup=buttons)
    except:
        msg = f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–û–ø–∏—Å–∞–Ω–∏–µ: "
        msg += f"{description}\n"
        msg += f"–¶–µ–Ω–∞: {price} —Ä—É–±–ª–µ–π\n"

        bot.send_message(message.chat.id, msg, reply_markup=buttons)
    try:
        bot.delete_message(message.chat.id, previous_message.id)
    except:
        pass


@bot.message_handler(commands=['br'])
def welcome(message):
    chat_id = message.chat.id
    bot.send_message(chat_id,
                     '–°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –ø–æ–π–¥–µ—Ç —Å –í–∞–º–∏?')
    users[chat_id] = {}
    bot.register_next_step_handler(message, second)

def second(message):
    chat_id = message.chat.id
    name = message.text
    bro.append(name)
    bot.send_message(chat_id, f'–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫')
    bot.register_next_step_handler(message, third)


def third(message):
    chat_id = message.chat.id
    name = message.text
    bro.append(name)
    bot.send_message(chat_id, f'–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å')
    bot.register_next_step_handler(message, four)


def four(message):
    global bro
    button = types.InlineKeyboardMarkup()
    no = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data='no')
    yes = types.InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data='yes')
    button.add(no)
    button.add(yes)
    chat_id = message.chat.id
    surname = message.text
    bro.append(surname)
    bot.send_message(chat_id, f'''–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–∫–∞–∑: 
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: {bro[0]}
–í—Ä–µ–º—è: {bro[1]}
–î–æ–ø –ø–æ–∂–µ–ª–∞–Ω–∏—è: {bro[2]}''', reply_markup=button)

@bot.message_handler(content_types=['text'])
def question(message):
    if message.text.lower() != '–æ—Ç–º–µ–Ω–∏—Ç—å':
        sp.append(message.text)
        bot.send_message(1970887100, f'–í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.first_name}: {sp[-1]}')
    else:
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω, –Ω–æ –í—ã –º–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')


@bot.callback_query_handler(func=lambda call: True)
def function(call):
    global bro
    if call.data == "button4":
        bot.send_location(call.message.chat.id, 55, 37)
    if 'to' in call.data:
        page = int(call.data.split(' ')[1])
        menu(call.message, page=page, previous_message=call.message)
    if call.data == "question":
        bot.send_message(call.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ª–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ: –û—Ç–º–µ–Ω–∏—Ç—å')
    if call.data == "broni":
        welcome(message=call.message)
    if call.data == "no":
        bro = []
        print(bro)
        bot.send_message(call.message.chat.id, '–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞, –Ω–æ –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑')
        bot.delete_message(call.message.chat.id, call.message.message_id)
    if call.data == "yes":
        print(bro)
        bot.send_message(call.message.chat.id, f"""–ù–æ–≤—ã–π –∑–∞–∫–∞–∑:
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {bro[0]} 
–í—Ä–µ–º—è: {bro[1]}
–î–æ–ø –ø–æ–∂–µ–ª–∞–Ω–∏—è: {bro[2]}""")



bot.polling(none_stop=True)
